// <auto-generated />
using Domen;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Domen.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DobavljacProizvod", b =>
                {
                    b.Property<long>("DobavljaciId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProizvodiId")
                        .HasColumnType("bigint");

                    b.HasKey("DobavljaciId", "ProizvodiId");

                    b.HasIndex("ProizvodiId");

                    b.ToTable("DobavljacProizvod");
                });

            modelBuilder.Entity("Domen.Dobavljac", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Napomena")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PIB")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Dobavljac");
                });

            modelBuilder.Entity("Domen.Proizvod", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Cena")
                        .HasColumnType("float");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Pdv")
                        .HasColumnType("float");

                    b.Property<long>("TipProizvodaId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TipProizvodaId");

                    b.ToTable("Proizvod");
                });

            modelBuilder.Entity("Domen.TipProizvoda", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipProizvoda");
                });

            modelBuilder.Entity("DobavljacProizvod", b =>
                {
                    b.HasOne("Domen.Dobavljac", null)
                        .WithMany()
                        .HasForeignKey("DobavljaciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domen.Proizvod", null)
                        .WithMany()
                        .HasForeignKey("ProizvodiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domen.Proizvod", b =>
                {
                    b.HasOne("Domen.TipProizvoda", "TipProizvoda")
                        .WithMany()
                        .HasForeignKey("TipProizvodaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipProizvoda");
                });
#pragma warning restore 612, 618
        }
    }
}
